---
name: CI Builds

env:
  DOCKERHUB_NAMESPACE: dfuchs

permissions:
  actions: write
  contents: read

on:
  push:
    branches:
      - main
    paths:
      - '*.Dockerfile'
      - '.github/workflows/build.yaml'
  pull_request:
    branches:
      - main
    paths:
      - '*.Dockerfile'
      - '.github/workflows/build.yaml'
  workflow_dispatch:
    inputs:
      image:
        description: 'Which image(s) to build'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - alma_8
          - alma_9
          - debian_11
          - debian_12
          - ubuntu_22.04
          - ubuntu_24.04

jobs:

  filter:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: checkout
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: changed
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: tj-actions/changed-files@v46
        with:
          files_yaml: |
            alma_8:
              - alma_8.Dockerfile
            alma_9:
              - alma_9.Dockerfile
            debian_11:
              - debian_11.Dockerfile
            debian_12:
              - debian_12.Dockerfile
            ubuntu_2204:
              - ubuntu_2204.Dockerfile
            ubuntu_2404:
              - ubuntu_2404.Dockerfile
            workflow:
              - .github/workflows/build.yaml

      - id: set-matrix
        run: |
          MATRIX="[]"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" || "${{ steps.changed.outputs.workflow_any_changed }}" == "true" ]]; then
            IMAGE="${{ github.event.inputs.image }}"
            if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
              IMAGE="all"
            fi

            if [[ "$IMAGE" == "all" ]]; then
              MATRIX=$(jq -n -c '[
                {"distro_name":"alma","distro_version":8},
                {"distro_name":"alma","distro_version":9},
                {"distro_name":"debian","distro_version":11},
                {"distro_name":"debian","distro_version":12},
                {"distro_name":"ubuntu","distro_version":22.04},
                {"distro_name":"ubuntu","distro_version":24.04}
              ]')
            else
              NAME="${IMAGE%_*}"
              VERSION="${IMAGE#*_}"
              MATRIX="[ {\"distro_name\":\"$NAME\",\"distro_version\":$VERSION} ]"
            fi
          else
            [[ "${{ steps.changed.outputs.alma_8_any_changed }}" == "true" ]] && MATRIX=$(jq '. + [{"distro_name":"alma","distro_version":8}]' <<<"$MATRIX")
            [[ "${{ steps.changed.outputs.alma_9_any_changed }}" == "true" ]] && MATRIX=$(jq '. + [{"distro_name":"alma","distro_version":9}]' <<<"$MATRIX")
            [[ "${{ steps.changed.outputs.debian_11_any_changed }}" == "true" ]] && MATRIX=$(jq '. + [{"distro_name":"debian","distro_version":11}]' <<<"$MATRIX")
            [[ "${{ steps.changed.outputs.debian_12_any_changed }}" == "true" ]] && MATRIX=$(jq '. + [{"distro_name":"debian","distro_version":12}]' <<<"$MATRIX")
            [[ "${{ steps.changed.outputs.ubuntu_2204_any_changed }}" == "true" ]] && MATRIX=$(jq '. + [{"distro_name":"ubuntu","distro_version":22.04}]' <<<"$MATRIX")
            [[ "${{ steps.changed.outputs.ubuntu_2404_any_changed }}" == "true" ]] && MATRIX=$(jq '. + [{"distro_name":"ubuntu","distro_version":24.04}]' <<<"$MATRIX")
          fi
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        shell: bash

  build:
    needs: filter
    if: ${{ needs.filter.outputs.matrix != '[]' && needs.filter.outputs.matrix != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.filter.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ${{ matrix.distro_name }}_${{ matrix.distro_version }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.distro_name }}_${{ matrix.distro_version }}.Dockerfile
          push: false
          tags: ${{ env.DOCKERHUB_NAMESPACE }}/did-${{ matrix.distro_name }}:candidate-${{ github.sha }}
          cache-from: type=gha,scope=${{ matrix.distro_name }}_${{ matrix.distro_version }}
          cache-to: type=gha,mode=max,scope=${{ matrix.distro_name }}_${{ matrix.distro_version }}

      - name: Trigger Publish for ${{ matrix.distro_name }}_${{ matrix.distro_version }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_KEY: ${{ matrix.distro_name }}_${{ matrix.distro_version }}
        run: |
          echo "Triggering publish workflow for image: $IMAGE_KEY on main branch..."
          gh workflow run publish.yaml --ref main -f image=$IMAGE_KEY
